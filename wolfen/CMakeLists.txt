cmake_minimum_required(VERSION 3.0)

set(WOLFEN_SERVER_XEXT AUTO CACHE STRING "Xext (shared memory and shaping) support")
set_property(CACHE WOLFEN_SERVER_XEXT PROPERTY STRINGS AUTO ON OFF) 

set(WOLFEN_SERVER_XRANDR AUTO CACHE STRING "Xrandr support")
set_property(CACHE WOLFEN_SERVER_XRANDR PROPERTY STRINGS AUTO ON OFF) 

set(WOLFEN_SERVER_XRENDER AUTO CACHE STRING "XRender support")
set_property(CACHE WOLFEN_SERVER_XRENDER PROPERTY STRINGS AUTO ON OFF) 

set(WOLFEN_SERVER_XINERAMA AUTO CACHE STRING "Xinerama support")
set_property(CACHE WOLFEN_SERVER_XINERAMA PROPERTY STRINGS AUTO ON OFF) 

set(WOLFEN_SERVER_XVIDMODE AUTO CACHE STRING "XFree86-VidMode support")
set_property(CACHE WOLFEN_SERVER_XVIDMODE PROPERTY STRINGS AUTO ON OFF) 

pkg_check_modules(WOLFEN_SERVER_REQUIRED_DEPS REQUIRED IMPORTED_TARGET "pixman-1 x11 wayland-server")
pkg_check_modules(WOLFEN_SERVER_REQUIRED_BABL_DEP IMPORTED_TARGET "babl")
if (NOT WOLFEN_SERVER_REQUIRED_BABL_DEP_FOUND)
	pkg_check_modules(WOLFEN_SERVER_REQUIRED_BABL_DEP REQUIRED IMPORTED_TARGET "babl-0.1")
endif()

if(WOLFEN_SERVER_XEXT STREQUAL "AUTO")
	set(WOLFEN_SERVER_XEXT_DEP_FOUND FALSE)
	pkg_check_modules(WOLFEN_SERVER_XEXT_DEP IMPORTED_TARGET "xext")
elseif(WOLFEN_SERVER_XEXT)
	pkg_check_modules(WOLFEN_SERVER_XEXT_DEP REQUIRED IMPORTED_TARGET "xext")
else()
	set(WOLFEN_SERVER_XEXT_DEP_FOUND "???")
endif()

if(WOLFEN_SERVER_XRANDR STREQUAL "AUTO")
	set(WOLFEN_SERVER_XRANDR_DEP_FOUND FALSE)
	pkg_check_modules(WOLFEN_SERVER_XRANDR_DEP IMPORTED_TARGET "xrandr")
elseif(WOLFEN_SERVER_XRANDR)
	pkg_check_modules(WOLFEN_SERVER_XRANDR_DEP REQUIRED IMPORTED_TARGET "xrandr")
else()
	set(WOLFEN_SERVER_XRANDR_DEP_FOUND "???")
endif()

if(WOLFEN_SERVER_XRENDER STREQUAL "AUTO")
	set(WOLFEN_SERVER_XRENDER_DEP_FOUND FALSE)
	pkg_check_modules(WOLFEN_SERVER_XRENDER_DEP IMPORTED_TARGET "xrender")
elseif(WOLFEN_SERVER_XRENDER)
	pkg_check_modules(WOLFEN_SERVER_XRENDER_DEP REQUIRED REQUIREDIMPORTED_TARGET "xrender")
else()
	set(WOLFEN_SERVER_XRENDER_DEP_FOUND "???")
endif()

if(WOLFEN_SERVER_XINERAMA STREQUAL "AUTO")
	set(WOLFEN_SERVER_XINERAMA_DEP_FOUND FALSE)
	pkg_check_modules(WOLFEN_SERVER_XINERAMA_DEP IMPORTED_TARGET "xinerama")
elseif(WOLFEN_SERVER_XINERAMA)
	pkg_check_modules(WOLFEN_SERVER_XINERAMA_DEP REQUIRED IMPORTED_TARGET "xinerama")
else()
	set(WOLFEN_SERVER_XINERAMA_DEP_FOUND "???")
endif()

if(WOLFEN_SERVER_XVIDMODE STREQUAL "AUTO")
	set(WOLFEN_SERVER_XVIDMODE_DEP_FOUND FALSE)
	pkg_check_modules(WOLFEN_SERVER_XVIDMODE_DEP IMPORTED_TARGET "xxf86vm")
elseif(WOLFEN_SERVER_XVIDMODE)
	pkg_check_modules(WOLFEN_SERVER_XVIDMODE_DEP REQUIRED IMPORTED_TARGET "xxf86vm")
else()
	set(WOLFEN_SERVER_XVIDMODE_DEP_FOUND "???")
endif()
    
file(GLOB wolfen_server_src "src/*.c")
add_executable(wolfen_server ${wolfen_server_src})
add_executable(wolfen_server::wolfen_server ALIAS wolfen_server)
set_target_properties(wolfen_server PROPERTIES OUTPUT_NAME "wolfen")
target_include_directories(wolfen_server PUBLIC "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>")
target_link_libraries(wolfen_server PRIVATE PkgConfig::WOLFEN_SERVER_REQUIRED_DEPS PkgConfig::WOLFEN_SERVER_REQUIRED_BABL_DEP)
target_link_libraries(wolfen_server PRIVATE m)
if(WOLFEN_SERVER_XEXT STREQUAL "AUTO" OR WOLFEN_SERVER_XEXT AND WOLFEN_SERVER_XEXT_DEP_FOUND)
	target_link_libraries(wolfen_server PRIVATE PkgConfig::WOLFEN_SERVER_XEXT_DEP)
	add_compile_definitions(WOLFEN_HAS_XEXT)
endif()
if(WOLFEN_SERVER_XRANDR STREQUAL "AUTO" OR WOLFEN_SERVER_XRANDR AND WOLFEN_SERVER_XRANDR_DEP_FOUND)
	target_link_libraries(wolfen_server PRIVATE PkgConfig::WOLFEN_SERVER_XRANDR_DEP)
	add_compile_definitions(WOLFEN_HAS_XRANDR)
endif()
if(WOLFEN_SERVER_XRENDER STREQUAL "AUTO" OR WOLFEN_SERVER_XRENDER AND WOLFEN_SERVER_XRENDER_DEP_FOUND)
	target_link_libraries(wolfen_server PRIVATE PkgConfig::WOLFEN_SERVER_XRENDER_DEP)
	add_compile_definitions(WOLFEN_HAS_XRENDER)
endif()
if(WOLFEN_SERVER_XINERAMA STREQUAL "AUTO" OR WOLFEN_SERVER_XINERAMA AND WOLFEN_SERVER_XINERAMA_DEP_FOUND)
	target_link_libraries(wolfen_server PRIVATE PkgConfig::WOLFEN_SERVER_XINERAMA_DEP)
	add_compile_definitions(WOLFEN_HAS_XINERAMA)
endif()
if(WOLFEN_SERVER_XVIDMODE STREQUAL "AUTO" OR WOLFEN_SERVER_XVIDMODE AND WOLFEN_SERVER_XVIDMODE_DEP_FOUND)
	target_link_libraries(wolfen_server PRIVATE PkgConfig::WOLFEN_SERVER_XVIDMODE_DEP)
	add_compile_definitions(WOLFEN_HAS_XVIDMODE)
endif()

message(STATUS "")
message(STATUS "Wolfen configuation:")
if(WOLFEN_SERVER_XEXT_DEP_FOUND)
	message(STATUS "Xext (shared memory and shaping): ON (wanted: ${WOLFEN_SERVER_XEXT})")
else()
	message(STATUS "Xext (shared memory and shaping): OFF (wanted: ${WOLFEN_SERVER_XEXT})")
endif()
if(WOLFEN_SERVER_XRANDR_DEP_FOUND)
	message(STATUS "Xrandr: ON (wanted: ${WOLFEN_SERVER_XRANDR})")
else()
	message(STATUS "Xrandr: OFF (wanted: ${WOLFEN_SERVER_XRANDR})")
endif()
if(WOLFEN_SERVER_XRENDER_DEP_FOUND)
	message(STATUS "XRender: ON (wanted: ${WOLFEN_SERVER_XRENDER})")
else()
	message(STATUS "XRender: OFF (wanted: ${WOLFEN_SERVER_XRENDER})")
endif()
if(WOLFEN_SERVER_XINERAMA_DEP_FOUND)
	message(STATUS "Xinerama: ON (wanted: ${WOLFEN_SERVER_XINERAMA})")
else()
	message(STATUS "Xinerama: OFF (wanted: ${WOLFEN_SERVER_XINERAMA})")
endif()
if(WOLFEN_SERVER_XVIDMODE_DEP_FOUND)
	message(STATUS "XFree86-VidMode: ON (wanted: ${WOLFEN_SERVER_XVIDMODE})")
else()
	message(STATUS "XFree86-VidMode: OFF (wanted: ${WOLFEN_SERVER_XVIDMODE})")
endif()
message(STATUS "")
